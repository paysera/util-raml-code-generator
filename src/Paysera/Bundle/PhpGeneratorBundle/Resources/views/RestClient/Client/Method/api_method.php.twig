
    /**
{% if method.description is not empty %}
     * {{ method.description|raw }}
{% endif %}
     * {{ method.type }} {{ resource.uri|raw }}
     *
{% set arguments = php_generate_method_arguments(method, resource, api) %}
{% for argument in arguments %}
     * @param {{ argument.importedType != null ? argument.importedType : argument.namespacedType }} ${{ argument.name|to_variable_name }}
{% endfor %}
     * @return {{ php_get_return_type(method, api) }}
     */
    public function {{ generate_method_name(method, resource, api) }}({{ php_inline_arguments(arguments) }})
    {
        $request = $this->apiClient->createRequest(
            RequestMethodInterface::METHOD_{{ method.type }},
            {{ php_generate_uri(resource) }},
            {{ php_generate_entity_converter(method, api) }}
        );
        {% if is_stream_response(method) -%}
        return $this->apiClient->makeRawRequest($request, ['stream' => true])->getBody();
    {% elseif is_raw_response(method) -%}
        return $this->apiClient->makeRawRequest($request)->getBody()->getContents();
    {% else -%}
        $data = $this->apiClient->makeRequest($request);

        return {{ php_generate_result_populator(method, api) }}
    {% endif -%}
    }
